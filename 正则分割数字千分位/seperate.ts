function seperate(num: number):string {
  /**
   * $1 - 指向第一个分组的值，即可以看作是第一个分组值的变量声明
   * ?= - 零宽度正预测先行断言：断言 `?=xxx` 后面必然存在 xxx，若 `?=xxx` 后面不存在 xxx，则匹配失败
   * ?: - 非捕获性分组：`?:xxx` 所指定的 xxx 在匹配成功后，不会存在对应的分组里
   */

  /**
   * /(\d)(?=(?:\d{3})+$)/g 的含义：
   * 进行全局匹配，(\d)对应匹配到一个数字，且由?=断言可知这个数字后面必须跟随连续的三个数字，但是?:保证了后续的数字不会被添加到匹配分组中。
   * 因此实际表达式匹配得到的就是“一个数字，其特点是后续包含连续的三个数字”。
   * 通过 $1, 在其后面加上逗号。
   */
  const res:string = num.toString().replace(/(\d)(?=(?:\d{3})+$)/g, '$1,');
  return res;
}

console.log(seperate(1111123));